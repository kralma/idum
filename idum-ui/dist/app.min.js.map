{"version":3,"sources":["app.js","config.js","routes.js","controllers/dialogCtrl.js","controllers/headerCtrl.js","controllers/sensorDataCtrl.js","controllers/userCtrl.js","directives/graph.js","directives/modalDialog.js","directives/notificationDialog.js","services/dialogService.js","services/projectService.js","services/sensorDataService.js","services/sensorService.js","services/userService.js","templates.js"],"names":["angular","module","app","constant","config","$routeProvider","$locationProvider","when","controller","templateUrl","html5Mode","$scope","$rootScope","DialogService","$on","flashNotifications","dialogs","$location","$filter","reloadMenuItems","currentPath","path","slice","menuItems","forEach","item","active","indexOf","url","items","subitem","scope","next","current","menuVisible","label","icon","expandable","shown","expanded","hasRole","SensorDataService","getSensorData","then","response","data","UserService","login","user","sendPositiveNotification","loggedUser","sendNegativeNotification","register","console","log","directive","$window","restrict","replace","transclude","template","link","elem","attrs","updateGraph","width","clientWidth","height","svgElement","firstChild","setAttribute","valueMin","val","valueMax","key","hasOwnProperty","first","dataLength","length","last","dateInitial","date","dateEnd","dateRange","valueRange","stepX","stepY","points","d","x","y","innerHTML","$watch","element","bind","action","negativeAction","btns","outputObject","dialogTexts","title","content","spinner","preventClose","positiveLabel","positiveBtn","class","positiveClass","negativeLabel","negativeBtn","negativeClass","document","addEventListener","event","keyCode","$apply","close","service","addFlashNotification","flashNotification","timeout","setTimeout","push","$broadcast","createDialog","dialog","type","sendNeutralNotification","sendInfoNotification","createLoadingDialog","createConfirmDialog","createDecisionDialog","positiveAction","restUrlPrefix","$http","createProject","method","getProject","projectId","getProjects","sensorId","setSensorData","createSensor","getProjectSensors","currentUser","$templateCache","put"],"mappings":"CAAA,SAAAA,GACAA,EAAAC,OAAA,OAAA,UAAA,cAAA,yBAAA,YAAA,eAAA,kBACAD,SCFA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MACAC,GAAAC,SAAA,gBAAA,SACAH,SCHA,SAAAA,GACAA,EAAAC,OAAA,OAAAG,QAAA,iBAAA,oBAAA,SAAAC,EAAAC,GACAD,EAAAE,KAAA,UACAC,WAAA,WACAC,YAAA,2CAEAJ,EAAAE,KAAA,aACAC,WAAA,WACAC,YAAA,8CAGAH,EAAAI,WAAA,OAEAV,SCbA,SAAAA,GACAA,EAAAC,OAAA,OAAAO,WAAA,eAAA,SAAA,aAAA,gBAAA,SAAAG,EAAAC,EAAAC,GAEAD,EAAAE,IAAA,uBAAA,WACAH,EAAAI,mBAAAF,EAAAE,qBAGAH,EAAAE,IAAA,YAAA,WACAH,EAAAK,QAAAH,EAAAG,cAGAhB,SCXA,SAAAA,GACAA,EAAAC,OAAA,OAAAO,WAAA,cAAA,aAAA,SAAA,YAAA,UAAA,SAAAI,EAAAD,EAAAM,EAAAC,GA2CA,QAAAC,KACA,GAAAC,GAAAH,EAAAI,OAAAC,MAAA,EACAX,GAAAY,UAAAC,QAAA,SAAAC,GACAA,EAAAC,OAAA,IAAAN,EAAAO,QAAAF,EAAAG,KACA,MAAAH,EAAAI,OACAJ,EAAAI,MAAAL,QAAA,SAAAM,GACA,IAAAV,EAAAO,QAAAG,EAAAF,MACAE,EAAAJ,QAAA,EACAD,EAAAC,QAAA,GAEAI,EAAAJ,QAAA,MAnDAf,EAAAG,IAAA,oBAAA,SAAAiB,EAAAC,EAAAC,GACAtB,EAAAuB,aAAA,EACAf,MAGAR,EAAAY,YACAY,MAAA,OACAC,KAAA,OACAR,IAAA,OACAS,YAAA,EACAC,OAAA,IAEAH,MAAA,WACAC,KAAA,WACAC,YAAA,EACAC,OAAA,EACAC,UAAA,EACAV,QAAAM,MAAA,cAAAP,IAAA,cAAAU,OAAA,IAAAH,MAAA,aAAAP,IAAA,aAAAU,OAAA,IAAAH,MAAA,YAAAP,IAAA,YAAAU,OAAA,MAEAH,MAAA,WACAC,KAAA,oBACAC,YAAA,EACAC,OAAA,EACAC,UAAA,EACAV,QACAM,MAAA,0BACAP,IAAA,6BACAU,OAAA,EACAE,QAAA,qCACAL,MAAA,oBAAAP,IAAA,uBAAAU,OAAA,IAAAH,MAAA,qBAAAP,IAAA,WAAAU,OAAA,MAEAH,MAAA,aACAC,KAAA,WACAC,YAAA,EACAC,OAAA,EACAC,UAAA,EACAV,QAAAM,MAAA,cAAAP,IAAA,cAAAU,OAAA,IAAAH,MAAA,iBAAAP,IAAA,iBAAAU,OAAA,EAAAE,QAAA,oBAAAL,MAAA,mBAAAP,IAAA,mBAAAU,OAAA,EAAAE,QAAA,UAAAL,MAAA,aAAAP,IAAA,aAAAU,OAAA,EAAAE,QAAA,YAGArB,QAsBAnB,SChEA,SAAAA,GACAA,EAAAC,OAAA,OAAAO,WAAA,kBAAA,SAAA,oBAAA,SAAAG,EAAA8B,GACAA,EAAAC,gBAAAC,KAAA,SAAAC,GACAjC,EAAAkC,KAAAD,EAAAC,WAGA7C,SCNA,SAAAA,GACAA,EAAAC,OAAA,OAAAO,WAAA,YAAA,aAAA,SAAA,cAAA,gBAAA,SAAAI,EAAAD,EAAAmC,EAAAjC,GACAF,EAAAoC,MAAA,WACAD,EAAAC,MAAApC,EAAAqC,MAAAL,KAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAC,IACAA,IACAhC,EAAAoC,yBAAA,YACArC,EAAAsC,WAAAL,GACAhC,EAAAsC,yBAAA,mBAIAxC,EAAAyC,SAAA,WACAN,EAAAM,SAAAzC,EAAAqC,MAAAL,KAAA,SAAAC,GACAS,QAAAC,IAAAV,EAAAC,aAIA7C,SClBA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MAEAC,GAAAqD,UAAA,SAAA,UAAA,SAAAC,GACA,OACAC,SAAA,IACAC,SAAA,EACAC,YAAA,EACAC,SAAA,kDACA7B,OAAAc,KAAA,KACAgB,KAAA,SAAA9B,EAAA+B,EAAAC,GASA,QAAAC,KACA,GAAA,MAAAjC,EAAAc,KAAA,CAGA,GAAAoB,GAAAH,EAAA,GAAAI,YACAC,EAAA,EAAAF,EAAA,GACAG,EAAAN,EAAA,GAAAO,UAEAD,GAAAE,aAAA,QAAAL,GACAG,EAAAE,aAAA,SAAAH,EAEA,IAAAI,GAAAxC,EAAAc,KAAA,GAAA2B,IACAC,EAAA1C,EAAAc,KAAA,GAAA2B,GACA,KAAA,GAAAE,KAAA3C,GAAAc,KACAd,EAAAc,KAAA8B,eAAAD,KACA3C,EAAAc,KAAA6B,GAAAF,IAAAD,EACAA,EAAAxC,EAAAc,KAAA6B,GAAAF,IACAzC,EAAAc,KAAA6B,GAAAF,IAAAC,IACAA,EAAA1C,EAAAc,KAAA6B,GAAAF,KAKA,IAAAI,GAAA7C,EAAAc,KAAA,GACAgC,EAAA9C,EAAAc,KAAAiC,OACAC,EAAAhD,EAAAc,KAAAgC,EAAA,GACAG,EAAAJ,EAAAK,KACAC,EAAAH,EAAAE,KACAE,EAAAD,EAAAF,EACAI,EAAAX,EAAAF,EACAc,EAAApB,EAAAkB,EACAG,EAAA,GAAAnB,EAAAiB,EACAG,EAAA,EAEA,KAAAb,IAAA3C,GAAAc,KACA,GAAAd,EAAAc,KAAA8B,eAAAD,GAAA,CACA,GAAAc,GAAAzD,EAAAc,KAAA6B,GACAe,GAAAD,EAAAP,KAAAD,GAAAK,EACAK,EAAAvB,GAAAqB,EAAAhB,IAAAD,GAAAe,CACAC,GAAAA,EAAAE,EAAA,IAAAC,EAAA,IAIAtB,EAAAuB,UAAA,qBAAAJ,EAAA,qDAnDAxD,EAAA6D,OAAA,OAAA,WACA5B,MAGAhE,EAAA6F,QAAArC,GAAAsC,KAAA,SAAA,WACA9B,YAmDAhE,SCnEA,SAAAA,GACAA,EAAAC,OAAA,OAAAsD,UAAA,cAAA,WACA,OACAE,SAAA,IACAC,SAAA,EACAC,YAAA,EACA5B,OAAAO,MAAA,IAAAyD,OAAA,KAAAC,eAAA,KAAAC,KAAA,KAAAC,aAAA,MACAzF,YAAA,6DACAoD,KAAA,SAAA9B,EAAA+B,EAAAC,GACAhC,EAAAoE,eACApE,EAAAoE,YAAAC,MAAArC,EAAAqC,MACArE,EAAAoE,YAAAE,QAAAtC,EAAAsC,QAEAtC,EAAAuC,UACAvE,EAAAuE,SAAA,EACAvE,EAAAwE,cAAA,IAGAxE,EAAAkE,MAAAlC,EAAAyC,gBACAzE,EAAA0E,aACAtE,MAAA4B,EAAAyC,cACAE,MAAA3C,EAAA4C,cAAA5C,EAAA4C,cAAA,YAEA5C,EAAA6C,eACA7E,EAAA8E,aACA1E,MAAA4B,EAAA6C,cACAF,MAAA3C,EAAA+C,cAAA/C,EAAA+C,cAAA,WAEA/E,EAAAkE,MAAAlE,EAAA8E,YAAA9E,EAAA0E,cAEA1E,EAAAkE,MAAAlE,EAAA0E,cAIA1E,EAAAwE,cACAQ,SAAAC,iBAAA,UAAA,SAAAC,GACA,KAAAA,EAAAC,UACAnF,EAAAO,OAAA,EACAP,EAAAoF,YAKApF,EAAAqF,MAAA,WACArF,EAAAwE,eAGAxE,EAAAO,OAAA,IAGAP,EAAA6D,OAAA,SAAA,WACA,GAAAa,GAAA1E,EAAA0E,WACAA,KAGAA,EAAAV,OAAA,WACAhE,EAAAO,OAAA,EACAP,EAAAgE,QACAhE,EAAAgE,aAKAhE,EAAA6D,OAAA,iBAAA,WACA,GAAAiB,GAAA9E,EAAA8E,WACAA,KAGAA,EAAAd,OAAA,WACAhE,EAAAO,OAAA,EACAP,EAAAiE,gBACAjE,EAAAiE,0BAOAhG,SC9EA,SAAAA,GACAA,EAAAC,OAAA,OAAAsD,UAAA,qBAAA,WACA,OACAE,SAAA,IACAC,SAAA,EACAC,YAAA,EACA5B,OAAAO,MAAA,KACA7B,YAAA,oEACAoD,KAAA,SAAA9B,EAAA+B,EAAAC,GACAhC,EAAAqE,MAAArC,EAAAqC,MAEArE,EAAAwE,cACAQ,SAAAC,iBAAA,UAAA,SAAAC,GACA,KAAAA,EAAAC,UACAnF,EAAAO,OAAA,EACAP,EAAAoF,YAKApF,EAAAqF,MAAA,WACArF,EAAAwE,eAGAxE,EAAAO,OAAA,SAKAtC,SC7BA,SAAAA,GACAA,EAAAC,OAAA,OAAAoH,QAAA,iBAAA,aAAA,SAAAzG,GAIA,QAAA0G,GAAAC,EAAAC,GAiBA,MAhBAA,KACAA,EAAA,KAEAzG,EAAAS,QAAA,SAAA+F,GACAA,EAAAjF,OAAA,IAEAiF,EAAAjF,OAAA,EAEAmF,WAAA,WACAF,EAAAjF,OAAA,EACA1B,EAAAuG,UACAK,GAEAzG,EAAA2G,KAAAH,GACA3G,EAAA+G,WAAA,wBAEAJ,EAGA,QAAAK,GAAAC,GAUA,MATA7G,GAAAQ,QAAA,SAAAqG,GACAA,EAAAvF,OAAA,IAGAuF,EAAAvF,OAAA,EACAtB,EAAA0G,KAAAG,GAEAjH,EAAA+G,WAAA,aAEAE,EAGA,QAAA5E,GAAAmD,EAAAoB,GACA,MAAAF,IAAAlB,MAAAA,EAAA0B,KAAA,YAAAN,GAGA,QAAArE,GAAAiD,EAAAoB,GACA,MAAAF,IAAAlB,MAAAA,EAAA0B,KAAA,YAAAN,GAGA,QAAAO,GAAA3B,EAAAoB,GACA,MAAAF,IAAAlB,MAAAA,EAAA0B,KAAA,WAAAN,GAGA,QAAAQ,GAAA5B,EAAAoB,GACA,MAAAF,IAAAlB,MAAAA,EAAA0B,KAAA,WAAAN,GAGA,QAAAS,GAAA7B,GACA,GAAAyB,IAAAzB,MAAAA,EAAAE,SAAA,EACA,OAAAsB,GAAAC,GAGA,QAAAK,GAAA9B,EAAAC,EAAAN,EAAAS,EAAAI,EAAAD,EAAAG,GACA,GAAAe,IACAzB,MAAAA,EACAC,QAAAA,EACAN,OAAAA,EACAS,cAAAA,EACAI,cAAAA,EACAD,cAAAA,EACAG,cAAAA,EAEA,OAAAc,GAAAC,GAGA,QAAAM,GAAA/B,EAAAC,EAAA+B,EAAApC,EAAAQ,EAAAI,EAAAD,EAAAG,GACA,GAAAe,IACAzB,MAAAA,EACAC,QAAAA,EACAN,OAAAqC,EACApC,eAAAA,EACAQ,cAAAA,EACAI,cAAAA,EACAD,cAAAA,EACAG,cAAAA,EAEA,OAAAc,GAAAC,GAjFA,GAAA7G,MACAD,IAmFA,QACAkC,yBAAAA,EACA8E,wBAAAA,EACA5E,yBAAAA,EACA6E,qBAAAA,EACAC,oBAAAA,EACAC,oBAAAA,EACAC,qBAAAA,EACApH,mBAAAA,EACAC,QAAAA,OAGAhB,SClGA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MACAC,GAAAmH,QAAA,kBAAA,gBAAA,QAAA,SAAAgB,EAAAC,GACA,OACAC,cAAA,SAAA1F,GACA,MAAAyF,IACAE,OAAA,OACA5G,IAAAyG,EAAA,eACAxF,KAAAA,KAGA4F,WAAA,SAAAC,GACA,MAAAJ,IACAE,OAAA,MACA5G,IAAAyG,EAAA,0BAAAK,KAGAC,YAAA,WACA,MAAAL,IACAE,OAAA,MACA5G,IAAAyG,EAAA,uBAKArI,SCzBA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MACAC,GAAAmH,QAAA,qBAAA,gBAAA,QAAA,SAAAgB,EAAAC,GACA,OACA5F,cAAA,SAAAkG,GACA,MAAAN,IACAE,OAAA,MACA5G,IAAAyG,EAAA,uBAAAO,KAGAC,cAAA,SAAAhG,GACA,MAAAyF,IACAE,OAAA,OACA5G,IAAAyG,EAAA,qBAKArI,SClBA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MACAC,GAAAmH,QAAA,iBAAA,gBAAA,QAAA,SAAAgB,EAAAC,GACA,OACAQ,aAAA,SAAAjG,GACA,MAAAyF,IACAE,OAAA,OACA5G,IAAAyG,EAAA,cACAxF,KAAAA,KAGAkG,kBAAA,SAAAL,GACA,MAAAJ,IACAE,OAAA,MACA5G,IAAAyG,EAAA,yBAAAK,UAKA1I,SClBA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MACAC,GAAAmH,QAAA,eAAA,gBAAA,QAAA,SAAAgB,EAAAC,GACA,OACAlF,SAAA,SAAAJ,GACA,MAAAsF,IACAE,OAAA,OACA5G,IAAAyG,EAAA,eACAxF,KAAAG,KAGAD,MAAA,SAAAC,GACA,MAAAsF,IACAE,OAAA,OACA5G,IAAAyG,EAAA,YACAxF,KAAAG,KAGAgG,YAAA,SAAAhG,GACA,MAAAsF,IACAE,OAAA,MACA5G,IAAAyG,EAAA,oBAKArI,iEC3BAiJ,EAAAC,IAAA,uBAAA,+PACAD,EAAAC,IAAA,0BAAA,8eACAD,EAAAC,IAAA,wBAAA","file":"app.min.js","sourcesContent":["(function (angular) {\n    angular.module(\"app\", ['ngRoute', 'textAngular', 'pascalprecht.translate', 'ngCookies', 'ui.bootstrap', 'ngFileUpload']);\n})(angular);","(function (angular) {\n    var app = angular.module(\"app\");\n    app.constant(\"restUrlPrefix\", \"api/\");\n})(angular);","(function (angular) {\n    angular.module('app').config([\"$routeProvider\", \"$locationProvider\", function ($routeProvider, $locationProvider) {\n        $routeProvider.when('/login', {\n            controller: 'UserCtrl',\n            templateUrl: '/idum-ui/app/templates/login.tmpl.html'\n        });\n        $routeProvider.when('/register', {\n            controller: 'UserCtrl',\n            templateUrl: '/idum-ui/app/templates/register.tmpl.html'\n        });\n\n        $locationProvider.html5Mode(true);\n    }]);\n})(angular);","(function (angular) {\n    angular.module(\"app\").controller(\"DialogsCtrl\", [\"$scope\", \"$rootScope\", \"DialogService\", function ($scope, $rootScope, DialogService) {\n\n        $rootScope.$on(\"newFlashNotification\", function () {\n            $scope.flashNotifications = DialogService.flashNotifications;\n        });\n\n        $rootScope.$on(\"newDialog\", function () {\n            $scope.dialogs = DialogService.dialogs;\n        });\n    }]);\n})(angular);","(function (angular) {\n    angular.module(\"app\").controller(\"HeaderCtrl\", [\"$rootScope\", \"$scope\", \"$location\", \"$filter\", function ($rootScope, $scope, $location, $filter) {\n\n        $scope.$on('$routeChangeStart', function (scope, next, current) {\n            $scope.menuVisible = false;\n            reloadMenuItems();\n        });\n\n        $scope.menuItems = [{\n            label: 'HOME',\n            icon: 'home',\n            url: 'home',\n            expandable: false,\n            shown: true\n        }, {\n            label: 'PROFILES',\n            icon: 'profiles',\n            expandable: true,\n            shown: true,\n            expanded: true,\n            items: [{ label: 'MY_PROFILES', url: 'my-profiles', shown: false }, { label: 'INSTITUTES', url: 'institutes', shown: true }, { label: 'COMPANIES', url: 'companies', shown: true }]\n        }, {\n            label: 'PROJECTS',\n            icon: 'search-assignment',\n            expandable: true,\n            shown: true,\n            expanded: true,\n            items: [{\n                label: 'CREATE_FINISHED_PROJECT',\n                url: 'create-finished-assignment',\n                shown: true,\n                hasRole: 'ADMIN, REFERENT, TEAM_SUPERVISOR'\n            }, { label: 'FINISHED_PROJECTS', url: 'assignments/finished', shown: true }, { label: 'PUBLISHED_ARTICLES', url: 'articles', shown: true }]\n        }, {\n            label: 'MANAGEMENT',\n            icon: 'settings',\n            expandable: true,\n            shown: true,\n            expanded: true,\n            items: [{ label: 'CREATE_TEAM', url: 'create-team', shown: true }, { label: 'CREATE_COMPANY', url: 'create-company', shown: true, hasRole: 'ADMIN, REFERENT' }, { label: 'CREATE_INSTITUTE', url: 'create-institute', shown: true, hasRole: 'ADMIN' }, { label: 'FAKE_LOGIN', url: 'fake-login', shown: true, hasRole: 'ADMIN' }]\n        }];\n\n        reloadMenuItems();\n\n        function reloadMenuItems() {\n            var currentPath = $location.path().slice(1);\n            $scope.menuItems.forEach(function (item) {\n                item.active = currentPath.indexOf(item.url) === 0;\n                if (item.items != null) {\n                    item.items.forEach(function (subitem) {\n                        if (currentPath.indexOf(subitem.url) === 0) {\n                            subitem.active = true;\n                            item.active = false;\n                        } else {\n                            subitem.active = false;\n                        }\n                    });\n                }\n            });\n        }\n\n        //var menuItemElements = document.getElementsByClassName('expandable');\n        //console.log(menuItemElements[0]);\n    }]);\n})(angular);","(function (angular) {\n    angular.module(\"app\").controller(\"SensorDataCtrl\", [\"$scope\", \"SensorDataService\", function ($scope, SensorDataService) {\n        SensorDataService.getSensorData().then(function (response) {\n            $scope.data = response.data;\n        });\n    }]);\n})(angular);","(function (angular) {\n    angular.module(\"app\").controller(\"UserCtrl\", [\"$rootScope\", \"$scope\", \"UserService\", \"DialogService\", function ($rootScope, $scope, UserService, DialogService) {\n        $scope.login = function () {\n            UserService.login($scope.user).then(function (response) {\n                var data = response.data;\n                if (data) {\n                    DialogService.sendPositiveNotification(\"LOGIN_OK\");\n                    $rootScope.loggedUser = data;\n                } else DialogService.sendNegativeNotification(\"LOGIN_FAILED\");\n            });\n        };\n\n        $scope.register = function () {\n            UserService.register($scope.user).then(function (response) {\n                console.log(response.data);\n            });\n        };\n    }]);\n})(angular);","(function (angular) {\n    var app = angular.module(\"app\");\n\n    app.directive(\"graph\", [\"$window\", function ($window) {\n        return {\n            restrict: 'E',\n            replace: true,\n            transclude: false,\n            template: \"<div><svg width='200' height='200'></svg></div>\",\n            scope: { data: '=' },\n            link: function (scope, elem, attrs) {\n                scope.$watch('data', function () {\n                    updateGraph();\n                });\n\n                angular.element($window).bind('resize', function () {\n                    updateGraph();\n                });\n\n                function updateGraph() {\n                    if (scope.data == null) {\n                        return;\n                    }\n                    var width = elem[0].clientWidth;\n                    var height = 4 * width / 16;\n                    var svgElement = elem[0].firstChild;\n\n                    svgElement.setAttribute('width', width);\n                    svgElement.setAttribute('height', height);\n\n                    var valueMin = scope.data[0].val;\n                    var valueMax = scope.data[0].val;\n                    for (var key in scope.data) {\n                        if (scope.data.hasOwnProperty(key)) {\n                            if (scope.data[key].val < valueMin) {\n                                valueMin = scope.data[key].val;\n                            } else if (scope.data[key].val > valueMax) {\n                                valueMax = scope.data[key].val;\n                            }\n                        }\n                    }\n\n                    var first = scope.data[0];\n                    var dataLength = scope.data.length;\n                    var last = scope.data[dataLength - 1];\n                    var dateInitial = first.date;\n                    var dateEnd = last.date;\n                    var dateRange = dateEnd - dateInitial;\n                    var valueRange = valueMax - valueMin;\n                    var stepX = width / dateRange;\n                    var stepY = height * 0.9 / valueRange;\n                    var points = \"\";\n\n                    for (key in scope.data) {\n                        if (scope.data.hasOwnProperty(key)) {\n                            var d = scope.data[key];\n                            var x = (d.date - dateInitial) * stepX;\n                            var y = height - (d.val - valueMin) * stepY;\n                            points = points + x + \",\" + y + \" \";\n                        }\n                    }\n\n                    svgElement.innerHTML = '<polyline points=\"' + points + '\" style=\"fill:none;stroke:black;stroke-width:3\"/>';\n                }\n            }\n        };\n    }]);\n})(angular);","(function (angular) {\n    angular.module('app').directive('modalDialog', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            transclude: true,\n            scope: { shown: '=', action: '=?', negativeAction: '=?', btns: '=?', outputObject: '=?' },\n            templateUrl: 'idum-ui/app/js/directives/templates/modal-dialog.tmpl.html',\n            link: function (scope, elem, attrs) {\n                scope.dialogTexts = {};\n                scope.dialogTexts.title = attrs.title;\n                scope.dialogTexts.content = attrs.content;\n\n                if (attrs.spinner) {\n                    scope.spinner = true;\n                    scope.preventClose = true;\n                }\n\n                if (!scope.btns && attrs.positiveLabel) {\n                    scope.positiveBtn = {\n                        label: attrs.positiveLabel,\n                        class: attrs.positiveClass ? attrs.positiveClass : \"positive\"\n                    };\n                    if (attrs.negativeLabel) {\n                        scope.negativeBtn = {\n                            label: attrs.negativeLabel,\n                            class: attrs.negativeClass ? attrs.negativeClass : \"neutral\"\n                        };\n                        scope.btns = [scope.negativeBtn, scope.positiveBtn];\n                    } else {\n                        scope.btns = [scope.positiveBtn];\n                    }\n                }\n\n                if (!scope.preventClose) {\n                    document.addEventListener('keydown', function (event) {\n                        if (event.keyCode === 27) {\n                            scope.shown = false;\n                            scope.$apply();\n                        }\n                    });\n                }\n\n                scope.close = function () {\n                    if (scope.preventClose) {\n                        return;\n                    }\n                    scope.shown = false;\n                };\n\n                scope.$watch('action', function () {\n                    var positiveBtn = scope.positiveBtn;\n                    if (!positiveBtn) {\n                        return;\n                    }\n                    positiveBtn.action = function () {\n                        scope.shown = false;\n                        if (scope.action) {\n                            scope.action();\n                        }\n                    };\n                });\n\n                scope.$watch('negativeAction', function () {\n                    var negativeBtn = scope.negativeBtn;\n                    if (!negativeBtn) {\n                        return;\n                    }\n                    negativeBtn.action = function () {\n                        scope.shown = false;\n                        if (scope.negativeAction) {\n                            scope.negativeAction();\n                        }\n                    };\n                });\n            }\n        };\n    });\n})(angular);","(function (angular) {\n    angular.module('app').directive('notificationDialog', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            transclude: true,\n            scope: { shown: '=' },\n            templateUrl: 'idum-ui/app/js/directives/templates/notification-dialog.tmpl.html',\n            link: function (scope, elem, attrs) {\n                scope.title = attrs.title;\n\n                if (!scope.preventClose) {\n                    document.addEventListener('keydown', function (event) {\n                        if (event.keyCode === 27) {\n                            scope.shown = false;\n                            scope.$apply();\n                        }\n                    });\n                }\n\n                scope.close = function () {\n                    if (scope.preventClose) {\n                        return;\n                    }\n                    scope.shown = false;\n                };\n            }\n        };\n    });\n})(angular);","(function (angular) {\n    angular.module(\"app\").service(\"DialogService\", [\"$rootScope\", function ($rootScope) {\n        var dialogs = [];\n        var flashNotifications = [];\n\n        function addFlashNotification(flashNotification, timeout) {\n            if (!timeout) {\n                timeout = 10000;\n            }\n            flashNotifications.forEach(function (flashNotification) {\n                flashNotification.shown = false;\n            });\n            flashNotification.shown = true;\n\n            setTimeout(function () {\n                flashNotification.shown = false;\n                $rootScope.$apply();\n            }, timeout);\n\n            flashNotifications.push(flashNotification);\n            $rootScope.$broadcast(\"newFlashNotification\");\n\n            return flashNotification;\n        }\n\n        function createDialog(dialog) {\n            dialogs.forEach(function (dialog) {\n                dialog.shown = false;\n            });\n\n            dialog.shown = true;\n            dialogs.push(dialog);\n\n            $rootScope.$broadcast(\"newDialog\");\n\n            return dialog;\n        }\n\n        function sendPositiveNotification(title, timeout) {\n            return addFlashNotification({ title: title, type: 'positive' }, timeout);\n        }\n\n        function sendNegativeNotification(title, timeout) {\n            return addFlashNotification({ title: title, type: 'negative' }, timeout);\n        }\n\n        function sendNeutralNotification(title, timeout) {\n            return addFlashNotification({ title: title, type: 'neutral' }, timeout);\n        }\n\n        function sendInfoNotification(title, timeout) {\n            return addFlashNotification({ title: title, type: 'primary' }, timeout);\n        }\n\n        function createLoadingDialog(title) {\n            var dialog = { title: title, spinner: true };\n            return createDialog(dialog);\n        }\n\n        function createConfirmDialog(title, content, action, positiveLabel, negativeLabel, positiveClass, negativeClass) {\n            var dialog = {\n                title: title,\n                content: content,\n                action: action,\n                positiveLabel: positiveLabel,\n                negativeLabel: negativeLabel,\n                positiveClass: positiveClass,\n                negativeClass: negativeClass\n            };\n            return createDialog(dialog);\n        }\n\n        function createDecisionDialog(title, content, positiveAction, negativeAction, positiveLabel, negativeLabel, positiveClass, negativeClass) {\n            var dialog = {\n                title: title,\n                content: content,\n                action: positiveAction,\n                negativeAction: negativeAction,\n                positiveLabel: positiveLabel,\n                negativeLabel: negativeLabel,\n                positiveClass: positiveClass,\n                negativeClass: negativeClass\n            };\n            return createDialog(dialog);\n        }\n\n        return {\n            sendPositiveNotification: sendPositiveNotification,\n            sendNeutralNotification: sendNeutralNotification,\n            sendNegativeNotification: sendNegativeNotification,\n            sendInfoNotification: sendInfoNotification,\n            createLoadingDialog: createLoadingDialog,\n            createConfirmDialog: createConfirmDialog,\n            createDecisionDialog: createDecisionDialog,\n            flashNotifications: flashNotifications,\n            dialogs: dialogs\n        };\n    }]);\n})(angular);","(function (angular) {\n    var app = angular.module(\"app\");\n    app.service(\"ProjectService\", [\"restUrlPrefix\", \"$http\", function (restUrlPrefix, $http) {\n        return {\n            createProject: function (data) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'projects.php',\n                    data: data\n                });\n            },\n            getProject: function (projectId) {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'projects.php?projectId=' + projectId\n                });\n            },\n            getProjects: function () {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'projects.php'\n                });\n            }\n        };\n    }]);\n})(angular);","(function (angular) {\n    var app = angular.module(\"app\");\n    app.service(\"SensorDataService\", [\"restUrlPrefix\", \"$http\", function (restUrlPrefix, $http) {\n        return {\n            getSensorData: function (sensorId) {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'values.php?sensorId=' + sensorId\n                });\n            },\n            setSensorData: function (data) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'values.php'\n                });\n            }\n        };\n    }]);\n})(angular);","(function (angular) {\n    var app = angular.module(\"app\");\n    app.service(\"SensorService\", [\"restUrlPrefix\", \"$http\", function (restUrlPrefix, $http) {\n        return {\n            createSensor: function (data) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'sensors.php',\n                    data: data\n                });\n            },\n            getProjectSensors: function (projectId) {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'sensors.php?projectId=' + projectId\n                });\n            }\n        };\n    }]);\n})(angular);","\n(function (angular) {\n    var app = angular.module(\"app\");\n    app.service(\"UserService\", [\"restUrlPrefix\", \"$http\", function (restUrlPrefix, $http) {\n        return {\n            register: function (user) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'register.php',\n                    data: user\n                });\n            },\n            login: function (user) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'login.php',\n                    data: user\n                });\n            },\n            currentUser: function (user) {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'login.php'\n                });\n            }\n        };\n    }]);\n})(angular);",null]}