{"version":3,"sources":["app.js","config.js","routes.js","controllers/dialogCtrl.js","controllers/headerCtrl.js","controllers/projectCtrl.js","controllers/sensorDataCtrl.js","controllers/userCtrl.js","directives/graph.js","directives/modalDialog.js","directives/notificationDialog.js","directives/sensorPreview.js","services/dialogService.js","services/projectService.js","services/sensorDataService.js","services/sensorService.js","services/userService.js","templates.js"],"names":["angular","module","app","constant","config","$routeProvider","$locationProvider","when","controller","templateUrl","html5Mode","$scope","$rootScope","DialogService","$on","flashNotifications","dialogs","$location","$filter","setContentMargin","header","element","document","getElementById","headerHeight","clientHeight","style","marginTop","window","onresize","scope","next","current","ProjectService","getProjects","then","response","projects","data","createProject","project","sendPositiveNotification","path","projectId","SensorDataService","$routeParams","getProject","getExtendedData","sensor","showExtended","getSensorData","sensorId","allValues","UserService","currentUser","loggedUser","login","user","detailsBoxShown","sendNegativeNotification","register","console","log","logout","directive","$window","restrict","replace","transclude","template","link","elem","attrs","updateGraph","width","clientWidth","height","svgElement","firstChild","setAttribute","valueMin","value","valueMax","key","hasOwnProperty","first","dataLength","length","last","dateInitial","dateInsert","dateEnd","dateRange","valueRange","stepX","stepY","points","d","x","y","innerHTML","$watch","bind","shown","action","negativeAction","btns","outputObject","dialogTexts","title","content","spinner","preventClose","positiveLabel","positiveBtn","label","class","positiveClass","negativeLabel","negativeBtn","negativeClass","addEventListener","event","keyCode","$apply","close","showMore","service","addFlashNotification","flashNotification","timeout","forEach","setTimeout","push","$broadcast","createDialog","dialog","type","sendNeutralNotification","sendInfoNotification","createLoadingDialog","createConfirmDialog","createDecisionDialog","positiveAction","restUrlPrefix","$http","method","url","setSensorData","createSensor","getProjectSensors","$templateCache","put"],"mappings":"CAAA,SAAAA,GACAA,EAAAC,OAAA,OAAA,UAAA,cAAA,yBAAA,YAAA,eAAA,kBACAD,SCFA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MACAC,GAAAC,SAAA,gBAAA,SACAH,SCHA,SAAAA,GACAA,EAAAC,OAAA,OAAAG,QAAA,iBAAA,oBAAA,SAAAC,EAAAC,GACAD,EAAAE,KAAA,UACAC,WAAA,WACAC,YAAA,2CAEAJ,EAAAE,KAAA,aACAC,WAAA,WACAC,YAAA,8CAEAJ,EAAAE,KAAA,aACAC,WAAA,mBACAC,YAAA,8CAEAJ,EAAAE,KAAA,gBACAC,WAAA,iBACAC,YAAA,iDAEAJ,EAAAE,KAAA,wBACAC,WAAA,cACAC,YAAA,oDAGAH,EAAAI,WAAA,OAEAV,SCzBA,SAAAA,GACAA,EAAAC,OAAA,OAAAO,WAAA,eAAA,SAAA,aAAA,gBAAA,SAAAG,EAAAC,EAAAC,GAEAD,EAAAE,IAAA,uBAAA,WACAH,EAAAI,mBAAAF,EAAAE,qBAGAH,EAAAE,IAAA,YAAA,WACAH,EAAAK,QAAAH,EAAAG,cAGAhB,SCXA,SAAAA,GACAA,EAAAC,OAAA,OAAAO,WAAA,cAAA,aAAA,SAAA,YAAA,UAAA,SAAAI,EAAAD,EAAAM,EAAAC,GASA,QAAAC,KACA,GAAAC,GAAApB,EAAAqB,QAAAC,SAAAC,eAAA,eACAC,EAAAJ,EAAA,GAAAK,YACAH,UAAAC,eAAA,eAAAG,MAAAC,UAAAH,EAAA,KAVAL,IACAS,OAAAC,SAAA,WACAV,KAGAR,EAAAG,IAAA,oBAAA,SAAAgB,EAAAC,EAAAC,UAQAhC,SChBA,SAAAA,GACAA,EAAAC,OAAA,OAAAO,WAAA,oBAAA,SAAA,iBAAA,gBAAA,YAAA,SAAAG,EAAAsB,EAAApB,EAAAI,GACAgB,EAAAC,cAAAC,KAAA,SAAAC,GACAzB,EAAA0B,SAAAD,EAAAE,UAIAtC,EAAAC,OAAA,OAAAO,WAAA,kBAAA,SAAA,iBAAA,gBAAA,YAAA,SAAAG,EAAAsB,EAAApB,EAAAI,GACAN,EAAA4B,cAAA,WACAN,EAAAM,cAAA5B,EAAA6B,SAAAL,KAAA,SAAAC,GACAvB,EAAA4B,yBAAA,gCACAxB,EAAAyB,KAAA,YAAAN,EAAAE,KAAAK,iBAKA3C,EAAAC,OAAA,OAAAO,WAAA,eAAA,SAAA,iBAAA,gBAAA,oBAAA,eAAA,SAAAG,EAAAsB,EAAApB,EAAA+B,EAAAC,GACA,GAAAF,GAAAE,EAAAF,SACAV,GAAAa,WAAAH,GAAAR,KAAA,SAAAC,GACAzB,EAAA6B,QAAAJ,EAAAE,OAGA3B,EAAAoC,gBAAA,SAAAC,GACAA,EAAAC,cAAA,EACAL,EAAAM,cAAAF,EAAAG,UAAAhB,KAAA,SAAAC,GACAY,EAAAI,UAAAhB,EAAAE,YAIAtC,SC7BA,SAAAA,GACAA,EAAAC,OAAA,OAAAO,WAAA,kBAAA,SAAA,oBAAA,SAAAG,EAAAiC,GACAA,EAAAM,gBAAAf,KAAA,SAAAC,GACAzB,EAAA2B,KAAAF,EAAAE,WAGAtC,SCNA,SAAAA,GACAA,EAAAC,OAAA,OAAAO,WAAA,YAAA,aAAA,SAAA,cAAA,gBAAA,SAAAI,EAAAD,EAAA0C,EAAAxC,GACAwC,EAAAC,cAAAnB,KAAA,SAAAC,GACAxB,EAAA2C,WAAAnB,EAAAE,OAGA3B,EAAA6C,MAAA,WACAH,EAAAG,MAAA7C,EAAA8C,MAAAtB,KAAA,SAAAC,GACA,GAAAE,GAAAF,EAAAE,IACAA,IACAzB,EAAA4B,yBAAA,iCACA7B,EAAA2C,WAAAjB,EACA3B,EAAA+C,iBAAA,GAEA7C,EAAA8C,yBAAA,gCAKAhD,EAAAiD,SAAA,WACAP,EAAAO,SAAAjD,EAAA8C,MAAAtB,KAAA,SAAAC,GACAyB,QAAAC,IAAA1B,EAAAE,SAIA3B,EAAAoD,OAAA,WACAV,EAAAU,SAAA5B,KAAA,SAAAC,GACAxB,EAAA2C,WAAAnB,EAAAE,KACAzB,EAAA4B,yBAAA,gCACA9B,EAAA+C,iBAAA,SAIA1D,SCjCA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MAEAC,GAAA8D,UAAA,SAAA,UAAA,SAAAC,GACA,OACAC,SAAA,IACAC,SAAA,EACAC,YAAA,EACAC,SAAA,kDACAvC,OAAAQ,KAAA,KACAgC,KAAA,SAAAxC,EAAAyC,EAAAC,GASA,QAAAC,KACA,GAAA,MAAA3C,EAAAQ,KAAA,CAGA,GAAAoC,GAAAH,EAAA,GAAAI,YACAC,EAAA,EAAAF,EAAA,GACAG,EAAAN,EAAA,GAAAO,UAEAD,GAAAE,aAAA,QAAAL,GACAG,EAAAE,aAAA,SAAAH,EAEA,IAAAI,GAAAlD,EAAAQ,KAAA,GAAA2C,MACAC,EAAApD,EAAAQ,KAAA,GAAA2C,KACA,KAAA,GAAAE,KAAArD,GAAAQ,KACAR,EAAAQ,KAAA8C,eAAAD,KACArD,EAAAQ,KAAA6C,GAAAF,MAAAD,EACAA,EAAAlD,EAAAQ,KAAA6C,GAAAF,MACAnD,EAAAQ,KAAA6C,GAAAF,MAAAC,IACAA,EAAApD,EAAAQ,KAAA6C,GAAAF,OAKA,IAAAI,GAAAvD,EAAAQ,KAAA,GACAgD,EAAAxD,EAAAQ,KAAAiD,OACAC,EAAA1D,EAAAQ,KAAAgD,EAAA,GACAG,EAAAJ,EAAAK,WACAC,EAAAH,EAAAE,WACAE,EAAAD,EAAAF,EACAI,EAAAX,EAAAF,EACAc,EAAApB,EAAAkB,EACAG,EAAA,GAAAnB,EAAAiB,EACAG,EAAA,EAEA,KAAAb,IAAArD,GAAAQ,KACA,GAAAR,EAAAQ,KAAA8C,eAAAD,GAAA,CACA,GAAAc,GAAAnE,EAAAQ,KAAA6C,GACAe,GAAAD,EAAAP,WAAAD,GAAAK,EACAK,EAAAvB,GAAAqB,EAAAhB,MAAAD,GAAAe,CACAC,GAAAA,EAAAE,EAAA,IAAAC,EAAA,IAIAtB,EAAAuB,UAAA,qBAAAJ,EAAA,qDAnDAlE,EAAAuE,OAAA,OAAA,WACA5B,MAGAzE,EAAAqB,QAAA4C,GAAAqC,KAAA,SAAA,WACA7B,YAmDAzE,SCnEA,SAAAA,GACAA,EAAAC,OAAA,OAAA+D,UAAA,cAAA,WACA,OACAE,SAAA,IACAC,SAAA,EACAC,YAAA,EACAtC,OAAAyE,MAAA,IAAAC,OAAA,KAAAC,eAAA,KAAAC,KAAA,KAAAC,aAAA,MACAlG,YAAA,6DACA6D,KAAA,SAAAxC,EAAAyC,EAAAC,GACA1C,EAAA8E,eACA9E,EAAA8E,YAAAC,MAAArC,EAAAqC,MACA/E,EAAA8E,YAAAE,QAAAtC,EAAAsC,QAEAtC,EAAAuC,UACAjF,EAAAiF,SAAA,EACAjF,EAAAkF,cAAA,IAGAlF,EAAA4E,MAAAlC,EAAAyC,gBACAnF,EAAAoF,aACAC,MAAA3C,EAAAyC,cACAG,MAAA5C,EAAA6C,cAAA7C,EAAA6C,cAAA,YAEA7C,EAAA8C,eACAxF,EAAAyF,aACAJ,MAAA3C,EAAA8C,cACAF,MAAA5C,EAAAgD,cAAAhD,EAAAgD,cAAA,WAEA1F,EAAA4E,MAAA5E,EAAAyF,YAAAzF,EAAAoF,cAEApF,EAAA4E,MAAA5E,EAAAoF,cAIApF,EAAAkF,cACA1F,SAAAmG,iBAAA,UAAA,SAAAC,GACA,KAAAA,EAAAC,UACA7F,EAAAyE,OAAA,EACAzE,EAAA8F,YAKA9F,EAAA+F,MAAA,WACA/F,EAAAkF,eAGAlF,EAAAyE,OAAA,IAGAzE,EAAAuE,OAAA,SAAA,WACA,GAAAa,GAAApF,EAAAoF,WACAA,KAGAA,EAAAV,OAAA,WACA1E,EAAAyE,OAAA,EACAzE,EAAA0E,QACA1E,EAAA0E,aAKA1E,EAAAuE,OAAA,iBAAA,WACA,GAAAkB,GAAAzF,EAAAyF,WACAA,KAGAA,EAAAf,OAAA,WACA1E,EAAAyE,OAAA,EACAzE,EAAA2E,gBACA3E,EAAA2E,0BAOAzG,SC9EA,SAAAA,GACAA,EAAAC,OAAA,OAAA+D,UAAA,qBAAA,WACA,OACAE,SAAA,IACAC,SAAA,EACAC,YAAA,EACAtC,OAAAyE,MAAA,KACA9F,YAAA,oEACA6D,KAAA,SAAAxC,EAAAyC,EAAAC,GACA1C,EAAA+E,MAAArC,EAAAqC,MAEA/E,EAAAkF,cACA1F,SAAAmG,iBAAA,UAAA,SAAAC,GACA,KAAAA,EAAAC,UACA7F,EAAAyE,OAAA,EACAzE,EAAA8F,YAKA9F,EAAA+F,MAAA,WACA/F,EAAAkF,eAGAlF,EAAAyE,OAAA,SAKAvG,SC7BA,SAAAA,GACAA,EAAAC,OAAA,OAAA+D,UAAA,gBAAA,WACA,OACAE,SAAA,IACAC,SAAA,EACArC,OAAAkB,OAAA,KACAvC,YAAA,+DACA6D,KAAA,SAAAxC,EAAAyC,EAAAC,GACA1C,EAAAgG,UAAA,EACAhG,EAAAiB,gBAAA,WACAjB,EAAAgG,UAAA,EACAlF,kBAAAM,cAAApB,EAAAkB,OAAAG,UAAAhB,KAAA,SAAAC,GACAN,EAAAsB,UAAAhB,EAAAE,aAMAtC,SClBA,SAAAA,GACAA,EAAAC,OAAA,OAAA8H,QAAA,iBAAA,aAAA,SAAAnH,GAIA,QAAAoH,GAAAC,EAAAC,GAiBA,MAhBAA,KACAA,EAAA,KAEAnH,EAAAoH,QAAA,SAAAF,GACAA,EAAA1B,OAAA,IAEA0B,EAAA1B,OAAA,EAEA6B,WAAA,WACAH,EAAA1B,OAAA,EACA3F,EAAAgH,UACAM,GAEAnH,EAAAsH,KAAAJ,GACArH,EAAA0H,WAAA,wBAEAL,EAGA,QAAAM,GAAAC,GAUA,MATAxH,GAAAmH,QAAA,SAAAK,GACAA,EAAAjC,OAAA,IAGAiC,EAAAjC,OAAA,EACAvF,EAAAqH,KAAAG,GAEA5H,EAAA0H,WAAA,aAEAE,EAGA,QAAA/F,GAAAoE,EAAAqB,GACA,MAAAF,IAAAnB,MAAAA,EAAA4B,KAAA,YAAAP,GAGA,QAAAvE,GAAAkD,EAAAqB,GACA,MAAAF,IAAAnB,MAAAA,EAAA4B,KAAA,YAAAP,GAGA,QAAAQ,GAAA7B,EAAAqB,GACA,MAAAF,IAAAnB,MAAAA,EAAA4B,KAAA,WAAAP,GAGA,QAAAS,GAAA9B,EAAAqB,GACA,MAAAF,IAAAnB,MAAAA,EAAA4B,KAAA,WAAAP,GAGA,QAAAU,GAAA/B,GACA,GAAA2B,IAAA3B,MAAAA,EAAAE,SAAA,EACA,OAAAwB,GAAAC,GAGA,QAAAK,GAAAhC,EAAAC,EAAAN,EAAAS,EAAAK,EAAAD,EAAAG,GACA,GAAAgB,IACA3B,MAAAA,EACAC,QAAAA,EACAN,OAAAA,EACAS,cAAAA,EACAK,cAAAA,EACAD,cAAAA,EACAG,cAAAA,EAEA,OAAAe,GAAAC,GAGA,QAAAM,GAAAjC,EAAAC,EAAAiC,EAAAtC,EAAAQ,EAAAK,EAAAD,EAAAG,GACA,GAAAgB,IACA3B,MAAAA,EACAC,QAAAA,EACAN,OAAAuC,EACAtC,eAAAA,EACAQ,cAAAA,EACAK,cAAAA,EACAD,cAAAA,EACAG,cAAAA,EAEA,OAAAe,GAAAC,GAjFA,GAAAxH,MACAD,IAmFA,QACA0B,yBAAAA,EACAiG,wBAAAA,EACA/E,yBAAAA,EACAgF,qBAAAA,EACAC,oBAAAA,EACAC,oBAAAA,EACAC,qBAAAA,EACA/H,mBAAAA,EACAC,QAAAA,OAGAhB,SClGA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MACAC,GAAA6H,QAAA,kBAAA,gBAAA,QAAA,SAAAiB,EAAAC,GACA,OACA1G,cAAA,SAAAD,GACA,MAAA2G,IACAC,OAAA,OACAC,IAAAH,EAAA,eACA1G,KAAAA,KAGAQ,WAAA,SAAAH,GACA,MAAAsG,IACAC,OAAA,MACAC,IAAAH,EAAA,2BAAArG,KAGAT,YAAA,WACA,MAAA+G,IACAC,OAAA,MACAC,IAAAH,EAAA,uBAKAhJ,SCzBA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MACAC,GAAA6H,QAAA,qBAAA,gBAAA,QAAA,SAAAiB,EAAAC,GACA,OACA/F,cAAA,SAAAC,GACA,MAAA8F,IACAC,OAAA,MACAC,IAAAH,EAAA,uBAAA7F,KAGAiG,cAAA,SAAA9G,GACA,MAAA2G,IACAC,OAAA,OACAC,IAAAH,EAAA,qBAKAhJ,SClBA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MACAC,GAAA6H,QAAA,iBAAA,gBAAA,QAAA,SAAAiB,EAAAC,GACA,OACAI,aAAA,SAAA/G,GACA,MAAA2G,IACAC,OAAA,OACAC,IAAAH,EAAA,cACA1G,KAAAA,KAGAgH,kBAAA,SAAA3G,GACA,MAAAsG,IACAC,OAAA,MACAC,IAAAH,EAAA,yBAAArG,UAKA3C,SClBA,SAAAA,GACA,GAAAE,GAAAF,EAAAC,OAAA,MACAC,GAAA6H,QAAA,eAAA,gBAAA,QAAA,SAAAiB,EAAAC,GACA,OACArF,SAAA,SAAAH,GACA,MAAAwF,IACAC,OAAA,OACAC,IAAAH,EAAA,eACA1G,KAAAmB,KAGAD,MAAA,SAAAC,GACA,MAAAwF,IACAC,OAAA,OACAC,IAAAH,EAAA,YACA1G,KAAAmB,KAGAH,YAAA,WACA,MAAA2F,IACAC,OAAA,MACAC,IAAAH,EAAA,eAGAjF,OAAA,WACA,MAAAkF,IACAC,OAAA,MACAC,IAAAH,EAAA,qBAKAhJ,iECjCAuJ,EAAAC,IAAA,uBAAA,+PACAD,EAAAC,IAAA,6BAAA,0uBACAD,EAAAC,IAAA,gCAAA,o1BACAD,EAAAC,IAAA,0BAAA,0RACAD,EAAAC,IAAA,0BAAA,+6CACAD,EAAAC,IAAA,wBAAA","file":"app.min.js","sourcesContent":["(function (angular) {\n    angular.module(\"app\", ['ngRoute', 'textAngular', 'pascalprecht.translate', 'ngCookies', 'ui.bootstrap', 'ngFileUpload']);\n})(angular);","(function (angular) {\n    var app = angular.module(\"app\");\n    app.constant(\"restUrlPrefix\", \"api/\");\n})(angular);","(function (angular) {\n    angular.module('app').config([\"$routeProvider\", \"$locationProvider\", function ($routeProvider, $locationProvider) {\n        $routeProvider.when('/login', {\n            controller: 'UserCtrl',\n            templateUrl: '/idum-ui/app/templates/login.tmpl.html'\n        });\n        $routeProvider.when('/register', {\n            controller: 'UserCtrl',\n            templateUrl: '/idum-ui/app/templates/register.tmpl.html'\n        });\n        $routeProvider.when('/projects', {\n            controller: 'ProjectsListCtrl',\n            templateUrl: '/idum-ui/app/templates/projects.tmpl.html'\n        });\n        $routeProvider.when('/new-project', {\n            controller: 'NewProjectCtrl',\n            templateUrl: '/idum-ui/app/templates/new-project.tmpl.html'\n        });\n        $routeProvider.when('/projects/:projectId', {\n            controller: 'ProjectCtrl',\n            templateUrl: '/idum-ui/app/templates/project-detail.tmpl.html'\n        });\n\n        $locationProvider.html5Mode(true);\n    }]);\n})(angular);","(function (angular) {\n    angular.module(\"app\").controller(\"DialogsCtrl\", [\"$scope\", \"$rootScope\", \"DialogService\", function ($scope, $rootScope, DialogService) {\n\n        $rootScope.$on(\"newFlashNotification\", function () {\n            $scope.flashNotifications = DialogService.flashNotifications;\n        });\n\n        $rootScope.$on(\"newDialog\", function () {\n            $scope.dialogs = DialogService.dialogs;\n        });\n    }]);\n})(angular);","(function (angular) {\n    angular.module(\"app\").controller(\"HeaderCtrl\", [\"$rootScope\", \"$scope\", \"$location\", \"$filter\", function ($rootScope, $scope, $location, $filter) {\n\n        setContentMargin();\n        window.onresize = function () {\n            setContentMargin();\n        };\n\n        $scope.$on('$routeChangeStart', function (scope, next, current) {});\n\n        function setContentMargin() {\n            var header = angular.element(document.getElementById(\"mainHeader\"));\n            var headerHeight = header[0].clientHeight;\n            document.getElementById(\"mainContent\").style.marginTop = headerHeight + \"px\";\n        }\n    }]);\n})(angular);","(function (angular) {\n    angular.module(\"app\").controller(\"ProjectsListCtrl\", [\"$scope\", \"ProjectService\", \"DialogService\", \"$location\", function ($scope, ProjectService, DialogService, $location) {\n        ProjectService.getProjects().then(function (response) {\n            $scope.projects = response.data;\n        });\n    }]);\n\n    angular.module(\"app\").controller(\"NewProjectCtrl\", [\"$scope\", \"ProjectService\", \"DialogService\", \"$location\", function ($scope, ProjectService, DialogService, $location) {\n        $scope.createProject = function () {\n            ProjectService.createProject($scope.project).then(function (response) {\n                DialogService.sendPositiveNotification(\"Projekt byl úspěšně vytvořen\");\n                $location.path('projects/' + response.data.projectId);\n            });\n        };\n    }]);\n\n    angular.module(\"app\").controller(\"ProjectCtrl\", [\"$scope\", \"ProjectService\", \"DialogService\", \"SensorDataService\", \"$routeParams\", function ($scope, ProjectService, DialogService, SensorDataService, $routeParams) {\n        var projectId = $routeParams.projectId;\n        ProjectService.getProject(projectId).then(function (response) {\n            $scope.project = response.data;\n        });\n\n        $scope.getExtendedData = function (sensor) {\n            sensor.showExtended = true;\n            SensorDataService.getSensorData(sensor.sensorId).then(function (response) {\n                sensor.allValues = response.data;\n            });\n        };\n    }]);\n})(angular);","(function (angular) {\n    angular.module(\"app\").controller(\"SensorDataCtrl\", [\"$scope\", \"SensorDataService\", function ($scope, SensorDataService) {\n        SensorDataService.getSensorData().then(function (response) {\n            $scope.data = response.data;\n        });\n    }]);\n})(angular);","(function (angular) {\n    angular.module(\"app\").controller(\"UserCtrl\", [\"$rootScope\", \"$scope\", \"UserService\", \"DialogService\", function ($rootScope, $scope, UserService, DialogService) {\n        UserService.currentUser().then(function (response) {\n            $rootScope.loggedUser = response.data;\n        });\n\n        $scope.login = function () {\n            UserService.login($scope.user).then(function (response) {\n                var data = response.data;\n                if (data) {\n                    DialogService.sendPositiveNotification(\"Přihlášení proběhlo v pořádku\");\n                    $rootScope.loggedUser = data;\n                    $scope.detailsBoxShown = false;\n                } else {\n                    DialogService.sendNegativeNotification(\"Chybné přihlašovací údaje\");\n                }\n            });\n        };\n\n        $scope.register = function () {\n            UserService.register($scope.user).then(function (response) {\n                console.log(response.data);\n            });\n        };\n\n        $scope.logout = function () {\n            UserService.logout().then(function (response) {\n                $rootScope.loggedUser = response.data;\n                DialogService.sendPositiveNotification(\"Odhlášení proběhlo v pořádku\");\n                $scope.detailsBoxShown = false;\n            });\n        };\n    }]);\n})(angular);","(function (angular) {\n    var app = angular.module(\"app\");\n\n    app.directive(\"graph\", [\"$window\", function ($window) {\n        return {\n            restrict: 'E',\n            replace: true,\n            transclude: false,\n            template: \"<div><svg width='200' height='200'></svg></div>\",\n            scope: { data: '=' },\n            link: function (scope, elem, attrs) {\n                scope.$watch('data', function () {\n                    updateGraph();\n                });\n\n                angular.element($window).bind('resize', function () {\n                    updateGraph();\n                });\n\n                function updateGraph() {\n                    if (scope.data == null) {\n                        return;\n                    }\n                    var width = elem[0].clientWidth;\n                    var height = 4 * width / 16;\n                    var svgElement = elem[0].firstChild;\n\n                    svgElement.setAttribute('width', width);\n                    svgElement.setAttribute('height', height);\n\n                    var valueMin = scope.data[0].value;\n                    var valueMax = scope.data[0].value;\n                    for (var key in scope.data) {\n                        if (scope.data.hasOwnProperty(key)) {\n                            if (scope.data[key].value < valueMin) {\n                                valueMin = scope.data[key].value;\n                            } else if (scope.data[key].value > valueMax) {\n                                valueMax = scope.data[key].value;\n                            }\n                        }\n                    }\n\n                    var first = scope.data[0];\n                    var dataLength = scope.data.length;\n                    var last = scope.data[dataLength - 1];\n                    var dateInitial = first.dateInsert;\n                    var dateEnd = last.dateInsert;\n                    var dateRange = dateEnd - dateInitial;\n                    var valueRange = valueMax - valueMin;\n                    var stepX = width / dateRange;\n                    var stepY = height * 0.9 / valueRange;\n                    var points = \"\";\n\n                    for (key in scope.data) {\n                        if (scope.data.hasOwnProperty(key)) {\n                            var d = scope.data[key];\n                            var x = (d.dateInsert - dateInitial) * stepX;\n                            var y = height - (d.value - valueMin) * stepY;\n                            points = points + x + \",\" + y + \" \";\n                        }\n                    }\n\n                    svgElement.innerHTML = '<polyline points=\"' + points + '\" style=\"fill:none;stroke:black;stroke-width:3\"/>';\n                }\n            }\n        };\n    }]);\n})(angular);","(function (angular) {\n    angular.module('app').directive('modalDialog', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            transclude: true,\n            scope: { shown: '=', action: '=?', negativeAction: '=?', btns: '=?', outputObject: '=?' },\n            templateUrl: 'idum-ui/app/js/directives/templates/modal-dialog.tmpl.html',\n            link: function (scope, elem, attrs) {\n                scope.dialogTexts = {};\n                scope.dialogTexts.title = attrs.title;\n                scope.dialogTexts.content = attrs.content;\n\n                if (attrs.spinner) {\n                    scope.spinner = true;\n                    scope.preventClose = true;\n                }\n\n                if (!scope.btns && attrs.positiveLabel) {\n                    scope.positiveBtn = {\n                        label: attrs.positiveLabel,\n                        class: attrs.positiveClass ? attrs.positiveClass : \"positive\"\n                    };\n                    if (attrs.negativeLabel) {\n                        scope.negativeBtn = {\n                            label: attrs.negativeLabel,\n                            class: attrs.negativeClass ? attrs.negativeClass : \"neutral\"\n                        };\n                        scope.btns = [scope.negativeBtn, scope.positiveBtn];\n                    } else {\n                        scope.btns = [scope.positiveBtn];\n                    }\n                }\n\n                if (!scope.preventClose) {\n                    document.addEventListener('keydown', function (event) {\n                        if (event.keyCode === 27) {\n                            scope.shown = false;\n                            scope.$apply();\n                        }\n                    });\n                }\n\n                scope.close = function () {\n                    if (scope.preventClose) {\n                        return;\n                    }\n                    scope.shown = false;\n                };\n\n                scope.$watch('action', function () {\n                    var positiveBtn = scope.positiveBtn;\n                    if (!positiveBtn) {\n                        return;\n                    }\n                    positiveBtn.action = function () {\n                        scope.shown = false;\n                        if (scope.action) {\n                            scope.action();\n                        }\n                    };\n                });\n\n                scope.$watch('negativeAction', function () {\n                    var negativeBtn = scope.negativeBtn;\n                    if (!negativeBtn) {\n                        return;\n                    }\n                    negativeBtn.action = function () {\n                        scope.shown = false;\n                        if (scope.negativeAction) {\n                            scope.negativeAction();\n                        }\n                    };\n                });\n            }\n        };\n    });\n})(angular);","(function (angular) {\n    angular.module('app').directive('notificationDialog', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            transclude: true,\n            scope: { shown: '=' },\n            templateUrl: 'idum-ui/app/js/directives/templates/notification-dialog.tmpl.html',\n            link: function (scope, elem, attrs) {\n                scope.title = attrs.title;\n\n                if (!scope.preventClose) {\n                    document.addEventListener('keydown', function (event) {\n                        if (event.keyCode === 27) {\n                            scope.shown = false;\n                            scope.$apply();\n                        }\n                    });\n                }\n\n                scope.close = function () {\n                    if (scope.preventClose) {\n                        return;\n                    }\n                    scope.shown = false;\n                };\n            }\n        };\n    });\n})(angular);","(function (angular) {\n    angular.module('app').directive('sensorPreview', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: { sensor: '=' },\n            templateUrl: 'idum-ui/app/js/directives/templates/sensor-preview.tmpl.html',\n            link: function (scope, elem, attrs) {\n                scope.showMore = false;\n                scope.getExtendedData = function () {\n                    scope.showMore = true;\n                    SensorDataService.getSensorData(scope.sensor.sensorId).then(function (response) {\n                        scope.allValues = response.data;\n                    });\n                };\n            }\n        };\n    });\n})(angular);","(function (angular) {\n    angular.module(\"app\").service(\"DialogService\", [\"$rootScope\", function ($rootScope) {\n        var dialogs = [];\n        var flashNotifications = [];\n\n        function addFlashNotification(flashNotification, timeout) {\n            if (!timeout) {\n                timeout = 10000;\n            }\n            flashNotifications.forEach(function (flashNotification) {\n                flashNotification.shown = false;\n            });\n            flashNotification.shown = true;\n\n            setTimeout(function () {\n                flashNotification.shown = false;\n                $rootScope.$apply();\n            }, timeout);\n\n            flashNotifications.push(flashNotification);\n            $rootScope.$broadcast(\"newFlashNotification\");\n\n            return flashNotification;\n        }\n\n        function createDialog(dialog) {\n            dialogs.forEach(function (dialog) {\n                dialog.shown = false;\n            });\n\n            dialog.shown = true;\n            dialogs.push(dialog);\n\n            $rootScope.$broadcast(\"newDialog\");\n\n            return dialog;\n        }\n\n        function sendPositiveNotification(title, timeout) {\n            return addFlashNotification({ title: title, type: 'positive' }, timeout);\n        }\n\n        function sendNegativeNotification(title, timeout) {\n            return addFlashNotification({ title: title, type: 'negative' }, timeout);\n        }\n\n        function sendNeutralNotification(title, timeout) {\n            return addFlashNotification({ title: title, type: 'neutral' }, timeout);\n        }\n\n        function sendInfoNotification(title, timeout) {\n            return addFlashNotification({ title: title, type: 'primary' }, timeout);\n        }\n\n        function createLoadingDialog(title) {\n            var dialog = { title: title, spinner: true };\n            return createDialog(dialog);\n        }\n\n        function createConfirmDialog(title, content, action, positiveLabel, negativeLabel, positiveClass, negativeClass) {\n            var dialog = {\n                title: title,\n                content: content,\n                action: action,\n                positiveLabel: positiveLabel,\n                negativeLabel: negativeLabel,\n                positiveClass: positiveClass,\n                negativeClass: negativeClass\n            };\n            return createDialog(dialog);\n        }\n\n        function createDecisionDialog(title, content, positiveAction, negativeAction, positiveLabel, negativeLabel, positiveClass, negativeClass) {\n            var dialog = {\n                title: title,\n                content: content,\n                action: positiveAction,\n                negativeAction: negativeAction,\n                positiveLabel: positiveLabel,\n                negativeLabel: negativeLabel,\n                positiveClass: positiveClass,\n                negativeClass: negativeClass\n            };\n            return createDialog(dialog);\n        }\n\n        return {\n            sendPositiveNotification: sendPositiveNotification,\n            sendNeutralNotification: sendNeutralNotification,\n            sendNegativeNotification: sendNegativeNotification,\n            sendInfoNotification: sendInfoNotification,\n            createLoadingDialog: createLoadingDialog,\n            createConfirmDialog: createConfirmDialog,\n            createDecisionDialog: createDecisionDialog,\n            flashNotifications: flashNotifications,\n            dialogs: dialogs\n        };\n    }]);\n})(angular);","(function (angular) {\n    var app = angular.module(\"app\");\n    app.service(\"ProjectService\", [\"restUrlPrefix\", \"$http\", function (restUrlPrefix, $http) {\n        return {\n            createProject: function (data) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'projects.php',\n                    data: data\n                });\n            },\n            getProject: function (projectId) {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'projects.php?project_id=' + projectId\n                });\n            },\n            getProjects: function () {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'projects.php'\n                });\n            }\n        };\n    }]);\n})(angular);","(function (angular) {\n    var app = angular.module(\"app\");\n    app.service(\"SensorDataService\", [\"restUrlPrefix\", \"$http\", function (restUrlPrefix, $http) {\n        return {\n            getSensorData: function (sensorId) {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'values.php?sensorId=' + sensorId\n                });\n            },\n            setSensorData: function (data) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'values.php'\n                });\n            }\n        };\n    }]);\n})(angular);","(function (angular) {\n    var app = angular.module(\"app\");\n    app.service(\"SensorService\", [\"restUrlPrefix\", \"$http\", function (restUrlPrefix, $http) {\n        return {\n            createSensor: function (data) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'sensors.php',\n                    data: data\n                });\n            },\n            getProjectSensors: function (projectId) {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'sensors.php?projectId=' + projectId\n                });\n            }\n        };\n    }]);\n})(angular);","\n(function (angular) {\n    var app = angular.module(\"app\");\n    app.service(\"UserService\", [\"restUrlPrefix\", \"$http\", function (restUrlPrefix, $http) {\n        return {\n            register: function (user) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'register.php',\n                    data: user\n                });\n            },\n            login: function (user) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'login.php',\n                    data: user\n                });\n            },\n            currentUser: function () {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'login.php'\n                });\n            },\n            logout: function () {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'logout.php'\n                });\n            }\n        };\n    }]);\n})(angular);",null]}