{
  "version": 3,
  "sources": [
    "app.js",
    "config.js",
    "controllers/sensorDataCtrl.js",
    "controllers/userCtrl.js",
    "directives/graph.js",
    "services/sensorDataService.js",
    "services/userService.js"
  ],
  "names": [
    "angular",
    "module",
    "app",
    "constant",
    "controller",
    "$scope",
    "SensorDataService",
    "getSensorData",
    "then",
    "response",
    "data",
    "UserService",
    "login",
    "user",
    "console",
    "log",
    "register",
    "directive",
    "$window",
    "restrict",
    "replace",
    "transclude",
    "template",
    "scope",
    "link",
    "elem",
    "attrs",
    "updateGraph",
    "width",
    "clientWidth",
    "height",
    "svgElement",
    "firstChild",
    "setAttribute",
    "valueMin",
    "val",
    "valueMax",
    "key",
    "hasOwnProperty",
    "first",
    "dataLength",
    "length",
    "last",
    "dateInitial",
    "date",
    "dateEnd",
    "dateRange",
    "valueRange",
    "stepX",
    "stepY",
    "points",
    "d",
    "x",
    "y",
    "innerHTML",
    "$watch",
    "element",
    "bind",
    "service",
    "restUrlPrefix",
    "$http",
    "method",
    "url",
    "currentUser"
  ],
  "mappings": "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",
  "file": "app.min.js",
  "sourcesContent": [
    "(function (angular) {\n    angular.module(\"app\", ['ngRoute', 'textAngular', 'pascalprecht.translate', 'ngCookies', 'ui.bootstrap', 'ngFileUpload']);\n})(angular);",
    "(function (angular) {\n    var app = angular.module(\"app\");\n    app.constant(\"restUrlPrefix\", \"api/\");\n})(angular);",
    "(function (angular) {\n    angular.module(\"app\").controller(\"SensorDataCtrl\", [\"$scope\", \"SensorDataService\", function ($scope, SensorDataService) {\n        SensorDataService.getSensorData().then(function (response) {\n            $scope.data = response.data;\n        });\n    }]);\n})(angular);",
    "(function (angular) {\n    angular.module(\"app\").controller(\"UserCtrl\", [\"$scope\", \"UserService\", function ($scope, UserService) {\n        $scope.login = function () {\n            UserService.login($scope.user).then(function (response) {\n                console.log(response.data);\n            });\n        };\n\n        $scope.register = function () {\n            UserService.register($scope.user).then(function (response) {\n                console.log(response.data);\n            });\n        };\n    }]);\n})(angular);",
    "(function (angular) {\n    var app = angular.module(\"app\");\n\n    app.directive(\"graph\", [\"$window\", function ($window) {\n        return {\n            restrict: 'E',\n            replace: true,\n            transclude: false,\n            template: \"<div><svg width='200' height='200'></svg></div>\",\n            scope: { data: '=' },\n            link: function (scope, elem, attrs) {\n                scope.$watch('data', function () {\n                    updateGraph();\n                });\n\n                angular.element($window).bind('resize', function () {\n                    updateGraph();\n                });\n\n                function updateGraph() {\n                    if (scope.data == null) {\n                        return;\n                    }\n                    var width = elem[0].clientWidth;\n                    var height = 4 * width / 16;\n                    var svgElement = elem[0].firstChild;\n\n                    svgElement.setAttribute('width', width);\n                    svgElement.setAttribute('height', height);\n\n                    var valueMin = scope.data[0].val;\n                    var valueMax = scope.data[0].val;\n                    for (key in scope.data) {\n                        if (scope.data.hasOwnProperty(key)) {\n                            if (scope.data[key].val < valueMin) {\n                                valueMin = scope.data[key].val;\n                            } else if (scope.data[key].val > valueMax) {\n                                valueMax = scope.data[key].val;\n                            }\n                        }\n                    }\n\n                    var first = scope.data[0];\n                    var dataLength = scope.data.length;\n                    var last = scope.data[dataLength - 1];\n                    var dateInitial = first.date;\n                    var dateEnd = last.date;\n                    var dateRange = dateEnd - dateInitial;\n                    var valueRange = valueMax - valueMin;\n                    var stepX = width / dateRange;\n                    var stepY = height * 0.9 / valueRange;\n                    var points = \"\";\n\n                    for (key in scope.data) {\n                        if (scope.data.hasOwnProperty(key)) {\n                            var d = scope.data[key];\n                            var x = (d.date - dateInitial) * stepX;\n                            var y = height - (d.val - valueMin) * stepY;\n                            points = points + x + \",\" + y + \" \";\n                        }\n                    }\n\n                    svgElement.innerHTML = '<polyline points=\"' + points + '\" style=\"fill:none;stroke:black;stroke-width:3\"/>';\n                }\n            }\n        };\n    }]);\n})(angular);",
    "(function (angular) {\n    var app = angular.module(\"app\");\n    app.service(\"SensorDataService\", [\"restUrlPrefix\", \"$http\", function (restUrlPrefix, $http) {\n        return {\n            getSensorData: function () {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'values.php'\n                });\n            }\n        };\n    }]);\n})(angular);",
    "\n(function (angular) {\n    var app = angular.module(\"app\");\n    app.service(\"UserService\", [\"restUrlPrefix\", \"$http\", function (restUrlPrefix, $http) {\n        return {\n            register: function (user) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'register.php',\n                    data: user\n                });\n            },\n            login: function (user) {\n                return $http({\n                    method: 'POST',\n                    url: restUrlPrefix + 'login.php',\n                    data: user\n                });\n            },\n            currentUser: function (user) {\n                return $http({\n                    method: 'GET',\n                    url: restUrlPrefix + 'login.php'\n                });\n            }\n        };\n    }]);\n})(angular);"
  ]
}